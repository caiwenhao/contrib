# A headless service to create DNS records
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-logging
  labels:
    app: elasticsearch
spec:
  ports:
  - port: 9200
    name: http
  - port: 9300
    name: transport
  clusterIP: None
  selector:
    app: elasticsearch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: elasticsearch
spec:
  serviceName: "elasticsearch"
  replicas: 3
  template:
    metadata:
      labels:
        app: elasticsearch
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.alpha.kubernetes.io/init-containers: '[
            {
                "name": "max-map-count-set",
                "image": "quay.io/samsung_cnct/set_max_map_count:1.1",
                "volumeMounts": [
                    {
                        "name": "hostproc",
                        "mountPath": "/hostproc"
                    }
                ]
            }]'
    spec:
      serviceAccount: elasticsearch
      serviceAccountName: elasticsearch
      containers:
      - name: elasticsearch
        image: {{registry_hub}}/lifesense/elasticsearch:5.0.1
        ports:
        - name: transport
          containerPort: 9300
        - name: http
          containerPort: 9200
        resources:
          limits:
            cpu: 10000m
            memory: 4Gi
          requests:
            cpu: 500m
            memory: 4Gi
        env:
        - name: NODE_DATA
          value: "true"
        - name: NODE_MASTER
          value: "true"
        - name: SERVICE
          value: "elasticsearch-logging"
        - name: ES_JAVA_OPTS
          value: "-Xms4g -Xmx4g -Djava.net.preferIPv4Stack=true"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        imagePullPolicy: Always
        volumeMounts:
        - name: datadir
          mountPath: /usr/share/elasticsearch/data
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash","/pre-stop-hook.sh"]
      volumes:
      - name: hostproc
        hostPath:
          path: /proc
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
      storageClassName: ceph